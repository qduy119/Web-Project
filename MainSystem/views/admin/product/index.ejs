<div class="relative flex-[1_auto] flex flex-col break-words min-w-0 bg-clip-border rounded-[.95rem] bg-white m-5">

    <div
        class="relative flex flex-col min-w-0 break-words border border-dashed bg-clip-border rounded-2xl border-stone-200 bg-light/30">
        <!-- card header -->
        <form method="GET" action="/admin/product/index" class="m-3">


            <label for="default-search"
                class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Search</label>
            <div class="relative">
                <div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
                    <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true"
                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z" />
                    </svg>
                </div>
                <input type="search" name="search" id="search"
                    class="block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                    placeholder="Tìm kiếm" required>
                <button type="submit" id="searchBtn"
                    class="text-white absolute end-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Search</button>
            </div>


        </form>

        <div class="px-9 pt-5 flex justify-between items-stretch flex-wrap min-h-[70px] pb-0 bg-transparent">

            <h3 class="flex flex-col items-start justify-center m-2 ml-0 font-medium text-xl/tight text-dark">
                <span class="mr-3 font-semibold text-dark">Danh sách sản phẩm</span>
            </h3>
            <div class="relative flex flex-wrap items-center my-2">
                <a class="text-white bg-gradient-to-r from-cyan-400 via-cyan-500 to-cyan-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 shadow-lg shadow-cyan-500/50 dark:shadow-lg dark:shadow-cyan-800/80 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2"
                    data-ripple-light="true" href="/admin/product/create">
                    Thêm sản phẩm mới
                </a>
            </div>
        </div>
        <!-- end card header -->
        <!-- card body  -->
        <div class="flex-auto block py-8 pt-6 px-9">
            <div class="overflow-x-auto">

                <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
                    <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
                        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                            <tr>
                                <th scope="col" class="hidden px-6 py-3">
                                    ID
                                </th>
                                <th scope="col" class="px-6 py-3">
                                    THUMBNAIL
                                </th>
                                <th scope="col" class="px-6 py-3">
                                    TÊN SẢN PHẨM
                                </th>
                                <th scope="col" class="px-6 py-3">
                                    GIÁ
                                </th>

                                <th scope="col" class="px-6 py-3">

                                </th>

                            </tr>
                        </thead>
                        <tbody>
                            <% const len=pager.pageSize> list.length ? list.length : pager.pageSize %>
                                <% for(let i=0; i < len; i++) { %>
                                    <tr class="odd:bg-white odd:dark:bg-gray-900 even:bg-gray-50 even:dark:bg-gray-800 border-b dark:border-gray-700">
                                        <td
                                            class="hidden px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                                            <%= list[i].id %>
                                        </td>
                                        <td class="px-6 py-4">
                                            <img src="<%= list[i].thumbnail %>" class="w-[40px] h-[40px] inline-block shrink-0 rounded-2xl"
                                                        alt="">
                                                        
                                        </td>
                                        <td class="px-6 py-4">
                                            <%= list[i].title %>
                                        </td>
                                        <td class="px-6 py-4">
                                            <%= list[i].price %> VNĐ
                                        </td>
                                        <td class="px-6 py-4">
                                            <a href="/admin/product/edit?id=<%= list[i].id %>"
                                                class="text-yellow-600 border border-yellow-600 hover:bg-yellow-600 hover:text-white focus:ring-4 focus:outline-none focus:ring-yellow-300 font-medium rounded-full text-sm p-2.5 text-center inline-flex items-center">
                                                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                                                    <path d="M12.687 14.408a3.01 3.01 0 0 1-1.533.821l-3.566.713a3 3 0 0 1-3.53-3.53l.713-3.566a3.01 3.01 0 0 1 .821-1.533L10.905 2H2.167A2.169 2.169 0 0 0 0 4.167v11.666A2.169 2.169 0 0 0 2.167 18h11.666A2.169 2.169 0 0 0 16 15.833V11.1l-3.313 3.308Zm5.53-9.065.546-.546a2.518 2.518 0 0 0 0-3.56 2.576 2.576 0 0 0-3.559 0l-.547.547 3.56 3.56Z"/>
                                                    <path d="M13.243 3.2 7.359 9.081a.5.5 0 0 0-.136.256L6.51 12.9a.5.5 0 0 0 .59.59l3.566-.713a.5.5 0 0 0 .255-.136L16.8 6.757 13.243 3.2Z"/>
                                                  </svg>
                                            </a>

                                            <a href="" onclick="deleteHandler(this, event)"
                                                class="delete-btn text-red-700 border border-red-700 hover:bg-red-700 hover:text-white focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-full text-sm p-2.5 text-center inline-flex items-center">
                                                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 20">
                                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h16M7 8v8m4-8v8M7 1h4a1 1 0 0 1 1 1v3H6V2a1 1 0 0 1 1-1ZM3 5h12v13a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V5Z"/>
                                                  </svg>
                                            </a>
                                        </td>
                                    </tr>
                                    <% } %>

                        </tbody>
                    </table>
                </div>


                <div id="tablePaging"></div>



<div style="margin: -13px"
    class="hidden min-w-screen h-screen animated fadeIn faster fixed left-0 top-0 flex justify-center items-center inset-0 z-50 outline-none focus:outline-none"
    id="modal-id">
    <div class="absolute bg-black opacity-10 inset-0 z-0"></div>
    <div class="w-full max-w-lg p-5 relative mx-auto my-auto rounded-xl shadow-lg bg-white ">
        <!--content-->
        <div class="">
            <!--body-->
            <div class="text-center p-5 flex-auto justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 -m-1 flex items-center text-red-500 mx-auto"
                    fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <svg xmlns="http://www.w3.org/2000/svg" class="w-16 h-16 flex items-center text-red-500 mx-auto"
                    viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd"
                        d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z"
                        clip-rule="evenodd" />
                </svg>
                <h2 class="text-xl font-bold py-4 ">Are you sure?</h3>
                    <p class="text-sm text-gray-500 px-8">Do you really want to delete this product?</p>
            </div>
            <!--footer-->
            <div class="p-3 mt-2 text-center space-x-4 md:block">
                <button id="cancelBtn"
                    class="mb-2 md:mb-0 bg-white px-5 py-2 text-sm shadow-sm font-medium tracking-wider border text-gray-600 rounded-full hover:shadow-lg hover:bg-gray-100">
                    Cancel
                </button>
                <button id="submitBtn"
                    class="mb-2 md:mb-0 bg-red-500 border border-red-500 px-5 py-2 text-sm shadow-sm font-medium tracking-wider text-white rounded-full hover:shadow-lg hover:bg-red-600">
                    Delete
                </button>
            </div>
        </div>
    </div>
</div>



<script>
    async function changePage(page) {
        
        const tableBodyRows = document.querySelectorAll('table tbody tr');
        if (tableBodyRows.length < 5) {
            for (let i = 0; i < 5 - tableBodyRows.length; i++) {
                const trStr = `<tr class="odd:bg-white odd:dark:bg-gray-900 even:bg-gray-50 even:dark:bg-gray-800 border-b dark:border-gray-700">
            <td class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white"></td>
            <td class="px-6 py-4"></td>
            <td class="px-6 py-4"></td>
            <td class="px-6 py-4"></td>
            <td class="px-6 py-4"></td>
            <td class="px-6 py-4"></td>
        </tr>`;


                document.querySelector('table tbody').insertAdjacentHTML('beforeend', trStr);
            }


        }

        
        // Update the data in the table
        let params = (new URL(document.location)).searchParams;
        let searchValue = params.get("search");
        const url = `/admin/product/getEntity?page=${page}&search=${searchValue}`;
        const responseData = await GetData(url);
        const tableRows = document.querySelectorAll('table tbody tr');
        const dataLength = responseData.data.length;
        for (let i = 0; i < dataLength; i++) {

            const cols = tableRows[i].querySelectorAll('td');

            cols[0].innerHTML = `${responseData.data[i].id}`;
            cols[1].innerHTML = `<img src="${responseData.data[i].thumbnail}" class="w-[40px] h-[40px] inline-block shrink-0 rounded-2xl" alt=""/>`;

            cols[2].innerHTML = `${responseData.data[i].title}`;

            cols[3].innerHTML = `${responseData.data[i].price} VNĐ`;

            cols[4].innerHTML = `<a href="/admin/product/edit?id=${responseData.data[i].id}"
                                                class="text-yellow-600 border border-yellow-600 hover:bg-yellow-600 hover:text-white focus:ring-4 focus:outline-none focus:ring-yellow-300 font-medium rounded-full text-sm p-2.5 text-center inline-flex items-center">
                                                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                                                    <path d="M12.687 14.408a3.01 3.01 0 0 1-1.533.821l-3.566.713a3 3 0 0 1-3.53-3.53l.713-3.566a3.01 3.01 0 0 1 .821-1.533L10.905 2H2.167A2.169 2.169 0 0 0 0 4.167v11.666A2.169 2.169 0 0 0 2.167 18h11.666A2.169 2.169 0 0 0 16 15.833V11.1l-3.313 3.308Zm5.53-9.065.546-.546a2.518 2.518 0 0 0 0-3.56 2.576 2.576 0 0 0-3.559 0l-.547.547 3.56 3.56Z"/>
                                                    <path d="M13.243 3.2 7.359 9.081a.5.5 0 0 0-.136.256L6.51 12.9a.5.5 0 0 0 .59.59l3.566-.713a.5.5 0 0 0 .255-.136L16.8 6.757 13.243 3.2Z"/>
                                                  </svg>
                                            </a>

                                            <a href="" onclick="deleteHandler(this, event)"
                                                class="delete-btn text-red-700 border border-red-700 hover:bg-red-700 hover:text-white focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-full text-sm p-2.5 text-center inline-flex items-center">
                                                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 20">
                                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h16M7 8v8m4-8v8M7 1h4a1 1 0 0 1 1 1v3H6V2a1 1 0 0 1 1-1ZM3 5h12v13a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V5Z"/>
                                                  </svg>
                                            </a>`;
        }

        if (page == <%= pager.pages %>) {
            const table = document.querySelector('table tbody');
            for (let i = dataLength; i < 5; i++) {
                table.removeChild(table.children[dataLength]);
            }
        }

        // update the pages
        const response = await fetch(`/getPaging?page=${page}&totalPage=<%= pager.pages %>`, {
                method: "GET"
            });
        
        const paginatorHtml = await response.text();
        console.log(paginatorHtml)
        document.querySelector('#tablePaging').innerHTML = paginatorHtml;

    }


    (async function() {
        const response = await fetch(`/getPaging?page=1&totalPage=<%= pager.pages %>`, {
                method: "GET"
            });
        const paginatorHtml = await response.text();
        document.querySelector('#tablePaging').innerHTML = paginatorHtml;
    })();

    

    
    



    async function GetData(url) {
        try {
            const response = await fetch(url, {
                method: "GET"
            });

            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const responseData = await response.json();
            return responseData;
        } catch (error) {
            console.log(error);
        }
    }

    async function PostData(url, data) {
        try {
            const response = await fetch(url, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
            });

            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const responseData = await response.json();
            return responseData;
        } catch (error) {
            console.log(error);
        }
    }

    // Delete button
    function deleteHandler(btn, e) {
        e.preventDefault();
        const closestRow = btn.closest('tr');
        const modal = document.getElementById('modal-id');
        modal.classList.remove('hidden');
        const cancelBtn = modal.querySelector('#cancelBtn');
        cancelBtn.addEventListener('click', () => {
            modal.classList.add('hidden');
        });
        const submitBtn = modal.querySelector('#submitBtn');
        submitBtn.addEventListener('click', () => {

            const id = parseInt(closestRow.querySelectorAll('td')[0].innerText);

            closestRow.parentNode.removeChild(closestRow);

            PostData('/admin/product/delete', {
                id: id
            });

            modal.classList.add('hidden');
        });
    }

</script>