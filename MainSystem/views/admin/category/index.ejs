<div class="relative flex-[1_auto] flex flex-col break-words min-w-0 bg-clip-border rounded-[.95rem] bg-white m-5">
  <div class="relative flex flex-col min-w-0 break-words border border-dashed bg-clip-border rounded-2xl border-stone-200 bg-light/30">
    <!-- card header -->
    <div class="px-9 pt-5 flex justify-between items-stretch flex-wrap min-h-[70px] pb-0 bg-transparent">
      <h3 class="flex flex-col items-start justify-center m-2 ml-0 font-medium text-xl/tight text-dark">
        <span class="mr-3 font-semibold text-dark">Danh sách danh mục</span>
      </h3>
      <div class="relative flex flex-wrap items-center my-2">
        <a class="middle none center mr-4 rounded-lg bg-green-500 py-3 px-6 font-sans text-xs font-bold uppercase text-white shadow-md shadow-green-500/20 transition-all hover:shadow-lg hover:shadow-green-500/40 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none" data-ripple-light="true" href="#">
          Thêm danh mục mới
        </a>
      </div>
    </div>
    <!-- end card header -->
    <!-- card body  -->
    <div class="flex-auto block py-8 pt-6 px-9">
      <div class="overflow-x-auto">
        <table class="w-full my-0 align-middle text-dark border-neutral-200">
          <thead class="align-bottom">
            <tr class="font-semibold text-[0.95rem] text-secondary-dark">
              <th class="pb-3 text-start min-w-[30px]">ID</th>
              <th class="pb-3 text-start min-w-[50px]">TÊN DANH MỤC</th>
              <th class="pb-3 text-start min-w-[150px]">MÔ TẢ</th>
              <th class="pb-3 text-start min-w-[70px]"></th>
            </tr>
          </thead>
          <tbody>
            <% for(let i=0; i < pager.pageSize; i++) { %>
            <tr class="border-b border-dashed last:border-b-0">
              <td class="p-3 pr-0">
                <span class="font-semibold text-light-inverse text-lg/normal text-center">
                  <%= list[i].id %>
                </span>
              </td>
              <td class="p-3 pl-0">
                <div class="flex items-center">
                  <div class="relative inline-block shrink-0 rounded-2xl me-3">
                    <img src="<%= list[i].thumbnail %>" class="w-[40px] h-[40px] inline-block shrink-0 rounded-2xl" alt="">
                  </div>
                  <div class="flex items-center">
                    <span class="mb-1 font-semibold text-lg/normal text-secondary-inverse">
                      <%= list[i].title %>
                    </span>
                  </div>
                </div>
              </td>

              <td class="p-3 pr-0 text-start">
                <span class="mb-1 font-semibold text-lg/normal text-secondary-inverse">
                  <%= list[i].description %>
                </span>
              </td>
              <td class="p-3 pr-0 text-start">
                <button class="middle none relative h-10 max-h-[40px] w-10 max-w-[40px] rounded-lg bg-red-500 text-center font-sans text-xs font-medium uppercase text-white shadow-md shadow-pink-500/20 transition-all hover:shadow-lg hover:shadow-pink-500/40 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none" type="button" data-ripple-light="true">
                  <span class="absolute top-1/2 left-1/2 -translate-y-1/2 -translate-x-1/2 transform">
                    <i class="fa-solid fa-trash text-lg"></i>
                  </span>
                </button>
              </td>
            </tr>
            <% } %>
          </tbody>
        </table>

        <!-- component -->
        <nav aria-label="Page navigation">
          <ul class="inline-flex space-x-2">
            <% if (pager.curPage != 1) { %>
            <li><button
                class="w-10 h-10 text-indigo-600 transition-colors duration-150 rounded-full focus:shadow-outline hover:bg-indigo-100">
                <svg class="w-4 h-4 fill-current" viewBox="0 0 20 20">
                  <path d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" fill-rule="evenodd"></path>
                </svg></button>
            </li>
            <% } %> 
            <% for(let i = 1; i <= pager.pages; i++) { %>
            <% if (i == pager.curPage) {%>
            <li><button class="pageItem curPageItem w-10 h-10 text-white transition-colors duration-150 rounded-full focus:shadow-outline bg-indigo-600 border border-r-0 border-indigo-600">
                <%= i %>
            </button>
            </li>
            
            <% } else {%>
            <li><button class="pageItem w-10 h-10 text-indigo-600 transition-colors duration-150 rounded-full focus:shadow-outline hover:bg-indigo-100">
                <%= i %>
            </button>
            </li>
            <% } %>
            <% } %>
            <% if (pager.curPage != pager.pages) { %>
                <li><button
                    class="w-10 h-10 text-indigo-600 transition-colors duration-150 bg-white rounded-full focus:shadow-outline hover:bg-indigo-100">
                    <svg class="w-4 h-4 fill-current" viewBox="0 0 20 20">
                      <path d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" fill-rule="evenodd"></path>
                    </svg></button>
                </li>
            <% } %> 
            
          </ul>
        </nav>
      </div>
    </div>
  </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const pageItems = [...document.getElementsByClassName('pageItem')];
        pageItems.forEach(pageItem => {
            pageItem.addEventListener('click', (e) => {
                document.getElementsByClassName('curPageItem')[0].classList.remove('text-white');
                document.getElementsByClassName('curPageItem')[0].classList.remove('bg-indigo-600');
                document.getElementsByClassName('curPageItem')[0].classList.remove('border');
                document.getElementsByClassName('curPageItem')[0].classList.remove('border-r-0');
                document.getElementsByClassName('curPageItem')[0].classList.remove('border-indigo-600');
                document.getElementsByClassName('curPageItem')[0].classList.add('text-indigo-600');
                document.getElementsByClassName('curPageItem')[0].classList.add('hover:bg-indigo-100');
                document.getElementsByClassName('curPageItem')[0].classList.remove('curPageItem');

                e.target.classList.remove('text-indigo-600');
                e.target.classList.remove('hover:bg-indigo-100');
                e.target.classList.add('text-white');
                e.target.classList.add('bg-indigo-600');
                e.target.classList.add('border');
                e.target.classList.add('border-r-0');
                e.target.classList.add('border-indigo-600');
                e.target.classList.add('curPageItem');

                const data = {
                    page: parseInt(e.target.innerHTML)
                };
                
                PostData('/admin/category/getEntity', data)
            });
        });

        async function PostData(url, data) {
            try {
                const response = await fetch(url, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(data)
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                const responseData = await response.json();
                console.log(responseData);
            } catch (error) {
                console.log(error);
            }
        }
    });
</script>