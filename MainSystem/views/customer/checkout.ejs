<div class="container-fluid mt-body">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-dark" href="/customer/homepage"
                    >Home</a
                >
                <a class="breadcrumb-item text-dark" href="/customer/cart"
                    >Shopping Cart</a
                >
                <span class="breadcrumb-item active">Checkout</span>
            </nav>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-lg-8">
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">Thông tin đơn hàng</span>
            </h5>
            <div class="bg-light p-30 mb-5">
                <div class="border-bottom">
                    <div class="table-responsive">
                        <table class="table table-borderless text-center mb-0">
                            <thead>
                                <tr class="border-0">
                                    <th>Thumbnail</th>
                                    <th>Tên sản phẩm</th>
                                    <th>Số lượng</th>
                                    <th>Tổng tiền</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% items.forEach(item => { %>
                                <tr class="border-0">
                                    <td class="align-middle">
                                        <img
                                            src="<%= item.product.thumbnail %>"
                                            style="width: 60px; height: 60px"
                                            class="border-primary border border-2 rounded-1"
                                            alt="Thumbnail"
                                        />
                                    </td>
                                    <td class="align-middle">
                                        <%= item.product.title %>
                                    </td>
                                    <td class="align-middle">
                                        <%= item.quantity %>
                                    </td>
                                    <td class="align-middle">
                                        $<%= (item.quantity * (item.product.price * 0.01 * (100 - item.product.discountPercentage)).toFixed(2)).toFixed(2) %>
                                    </td>
                                </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="border-bottom pt-3 pb-2">
                    <div class="d-flex justify-content-between mb-3">
                        <h6>Tạm tính</h6>
                        <h6>
                            $<span class="subtotal">
                                <%= items.reduce((subtotal, i) => subtotal +
                                +(i.quantity * (i.product.price * 0.01 * (100 - i.product.discountPercentage)).toFixed(2)).toFixed(2), 0) %>
                            </span>
                        </h6>
                    </div>
                    <div class="d-flex justify-content-between">
                        <h6 class="font-weight-medium">Shipping</h6>
                        <h6 class="font-weight-medium">
                            Free
                        </h6>
                    </div>
                </div>
                <div class="pt-2">
                    <div class="d-flex justify-content-between mt-2">
                        <h5>Tổng tiền</h5>
                        <h5>$<span class="total"></span></h5>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">Thanh toán</span>
            </h5>
            <div class="bg-light p-30">
                <div class="form-group mb-4">
                    <div class="custom-control custom-radio">
                        <input
                            type="radio"
                            class="custom-control-input"
                            name="payment"
                            id="banktransfer"
                            checked
                        />
                        <label class="custom-control-label" for="banktransfer"
                            >Chuyển khoản</label
                        >
                    </div>
                </div>
                <button
                    class="btn btn-block btn-primary fw-semibold py-3 place-order d-flex align-items-center justify-content-center gap-3"
                    data-items="<%= JSON.stringify(items) %>"
                >
                    Đặt hàng và thanh toán
                    <div
                        class="spinner-border text-light hidden spinner"
                        role="status"
                    >
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </button>
                <p class="mt-3 text-danger error-payment fw-semibold"></p>
            </div>
        </div>
    </div>
</div>

<%- include('partials/toast') %>

<script>
    $(".total").html(+$(".subtotal").html());
    $(".place-order").on("click", async function () {
        const items = $(this).data("items");
        const totalPrice = +$(".total").html();
        $(".spinner").removeClass("hidden");
        const res = await privateAxios().post("/customer/api/order", {
            totalPrice,
        });
        const { order } = res.data;

        for (const item of items) {
            await privateAxios().post("/customer/api/orderdetail", {
                orderId: order.id,
                productId: item.productId,
                quantity: item.quantity,
                totalPrice: +(item.quantity * (item.product.price * 0.01 * (100 - item.product.discountPercentage)).toFixed(2)).toFixed(2)
                
            });
            await privateAxios().delete(`/customer/api/cart/${item.id}`);
        }
        const res1 = await privateAxios().post("/customer/api/payment", {
            orderId: order.id,
            amount: totalPrice,
        });
        const { payment } = res1.data;
        const res2 = await fetch("https://localhost:8080/transfer-to-payment", {
            method: "post",
            headers: {
                "Content-type": "application/json",
            },
            body: JSON.stringify(payment),
            credentials: "include",
        });
        const { status } = await res2.json();
        // const status = 200; // comment here
        $(".spinner").addClass("hidden");
        if (status === 200) {
            await privateAxios().put("/customer/api/order", {
                id: order.id,
                status: "Success",
            });
            await privateAxios().put("/customer/api/payment", {
                id: payment.id,
                status: "Success",
            });
            const toastLiveExample = $("#liveToast");
            const toastBootstrap =
                bootstrap.Toast.getOrCreateInstance(toastLiveExample);
            toastBootstrap.show();
            setTimeout(() => {
                window.location.href = "/customer/order";
            }, 1000);
        } else if (status === 404) {
            for (const item of items) {
                await privateAxios().put("/customer/api/product", {
                    quantity: item.quantity,
                    id: item.productId,
                });
            }
            await privateAxios().put("/customer/api/payment", {
                id: payment.id,
                status: "Error",
                message: "Tài khoản không đủ tiền",
            });
            await privateAxios().put("/customer/api/order", {
                id: order.id,
                status: "Error",
            });
            window.location.href = "/customer/order";
        } else if (status === 401) {
            $(".error-payment").html("Lỗi xác thực");
        }
    });
</script>
